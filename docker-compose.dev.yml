version: "3.8"

volumes:
  nginx_proxy_manager_data:
  letsencrypt:
  mysql:

services:
  backend:
    build:
      dockerfile: ./.build/backend/java/Dockerfile
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:8080/api/v1.0.0/healthcheck/status",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      DATABASE_HOST: ${MYSQL_HOST}
      DATABASE_PORT: ${MYSQL_PORT}
      DATABASE_SCHEMA: ${MYSQL_DATABASE}
      DATABASE_USERNAME: ${MYSQL_USER}
      DATABASE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      SECRET_KEY: ${SECRET_KEY}
      BUCKET_NAME: ${BUCKET_NAME}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SERVICE_ACCOUNT: ${SERVICE_ACCOUNT}

  frontend:
    build:
      dockerfile: ./.build/frontend/Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s
    environment:
      REACT_APP_REDIRECT_URI: ${REACT_APP_REDIRECT_URI}
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}

  mysql_db:
    build:
      context: ./.build/mysql
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      # - "127.0.0.1:3307:3306"
      - "3307:3306"

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:2.9.22
    restart: unless-stopped
    ports:
      - "80:80"
      # - "127.0.0.1:81:81"
      - "81:81"
      - "443:443"
    volumes:
      - nginx_proxy_manager_data:/data
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
      - mysql_db
